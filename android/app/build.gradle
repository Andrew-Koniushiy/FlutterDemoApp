def localProps = new Properties()
def localPropertiesFile = rootProject.file('localProps.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
       localProps.load(reader)
    }
}

def flutterRoot = localProps.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the localProps.properties file.")
}
def flutterVersionCode = localProps.getProperty('flutter.versionCode', "1")
def flutterVersionName = localProps.getProperty('flutter.versionName', '1.0')
def signingStorePassword = localProps.getProperty('signing.storePassword')
def signingKeyAlias = localProps.getProperty('signing.keyAlias')
def signingKeyPassword = localProps.getProperty('signing.keyPassword')


apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    signingConfigs {
        simple {
            storeFile file('./../keystore/simple')
            storePassword signingStorePassword
            keyAlias = signingKeyAlias
            keyPassword signingKeyPassword
        }
    }
    compileSdkVersion 29

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId 'co.uwhiz.flutterapp'
        minSdkVersion 16
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            signingConfig signingConfigs.simple
        }
        profile {
            signingConfig signingConfigs.simple
        }
        debug {
            signingConfig signingConfigs.simple
        }

    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
